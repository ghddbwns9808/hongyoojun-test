name: Build and Push OCI Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Build with Gradle
      run: ./gradlew build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/shinhancard/flux-oci-sample
        tags: |
          type=raw,value=latest
          type=raw,value={{date 'YYYYMMDD'}}-{{sha}}

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true

    - name: Install ORAS
      run: |
        curl -LO https://github.com/oras-project/oras/releases/download/v1.1.0/oras_1.1.0_linux_amd64.tar.gz
        mkdir -p oras-install/
        tar -zxf oras_1.1.0_linux_amd64.tar.gz -C oras-install/
        sudo mv oras-install/oras /usr/local/bin/
        rm -rf oras_1.1.0_linux_amd64.tar.gz oras-install/

    - name: Prepare Kubernetes manifests
      run: |
        mkdir -p manifests
        cp k8s/*.yaml manifests/
        tar -czvf manifests.tar.gz -C manifests .

    - name: Push OCI Image with ORAS
      run: |
        # Get the first tag from the metadata output
        IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)

        # Push the image using ORAS
        oras push ${IMAGE_TAG} \
          --config $(docker image inspect ${IMAGE_TAG} --format '{{.Id}}')@application/vnd.docker.container.image.v1+json \
          $(docker image save ${IMAGE_TAG} -o - | gzip | tee image.tar.gz | wc -c > /dev/null):/application/vnd.docker.image.rootfs.diff.tar.gzip \
          manifests.tar.gz:application/vnd.flux.kustomization.tar.gz

        # Also push with latest tag for convenience
        LATEST_TAG="ghcr.io/shinhancard/flux-oci-sample:latest"
        oras push ${LATEST_TAG} \
          --config $(docker image inspect ${IMAGE_TAG} --format '{{.Id}}')@application/vnd.docker.container.image.v1+json \
          image.tar.gz:/application/vnd.docker.image.rootfs.diff.tar.gzip \
          manifests.tar.gz:application/vnd.flux.kustomization.tar.gz
